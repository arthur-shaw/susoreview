% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow.R
\name{add_issue_if_unanswered}
\alias{add_issue_if_unanswered}
\title{Add an issue for interviews that have too many questions left unanswered}
\usage{
add_issue_if_unanswered(
  df_cases_to_review,
  df_interview_stats,
  df_issues,
  n_unanswered_ok = 0,
  df_legit_miss = NULL,
  issue_type = 1,
  issue_desc = "Questions left unanswered",
 
    issue_comment = glue::glue("ERROR: The interview is marked as complete, but there are {NotAnswered} questions left without a response. Please answer these questions.")
)
}
\arguments{
\item{df_cases_to_review}{Data frame. Cases to review.}

\item{df_interview_stats}{Data frame. Interview statistics fetched from the server.}

\item{df_issues}{Data frame. Contains issues for the interviews.}

\item{n_unanswered_ok}{Numeric. Maximum number of unanswered questions allowed before recording an issue.}

\item{df_legit_miss}{Data frame. Interview-specific threshold for unanswered questions.}

\item{issue_type}{Numeric. Issue type for the issue file: c(1, 2, 3, 4)}

\item{issue_desc}{Character. Short description of the issue.}

\item{issue_comment}{Expression. Expression--for example glue or paste0--that yields an issue message meant for interviewers to understand the problem.}
}
\value{
Data frame. Issues data frame with new record for interviews with too many questions left unanswered.
}
\description{
The threshold for unanswered interviews can be specified in one of two ways. The first way is to set a global threshold through the \code{n_unanswered_ok} parameter.
}
\details{
The second way is through a data frame that specifies an interview-specific threshold. This may be useful when there are questions legitimately left unanswered, most often due to the design of the questionnaire.
}
