[{"path":"https://arthur-shaw.github.io/susoreview/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Arthur Shaw. Author, maintainer.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shaw (2022). susoreview: Provides Tools Reviewing Survey Solutions Data Identifying Issues. R package version 0.1.0, https://github.com/arthur-shaw/susoreview.","code":"@Manual{,   title = {susoreview: Provides Tools for Reviewing Survey Solutions Data and Identifying Issues},   author = {Arthur Shaw},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/arthur-shaw/susoreview}, }"},{"path":"https://arthur-shaw.github.io/susoreview/index.html","id":"susoreview-","dir":"","previous_headings":"","what":"Tools for reviewing Survey Solutions interviews","title":"Tools for reviewing Survey Solutions interviews","text":"goal susoreview offer tools process automating review rejection interviews. tools span full pipeline process: Creating attributes, developed microdata used identifying issues; Creating issues, devised one attribute directly serious flaws data; adding issues based interview metadata (e.g., number unanswered questions) checking relevant comments require review rejection flagging persistent issues require actions outside rejection constructing rejection messages issues relevant interview posting comments specific questions questionnaire rejecting interviews via appropriate API endpoint function interview’s status","code":""},{"path":"https://arthur-shaw.github.io/susoreview/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for reviewing Survey Solutions interviews","text":"package yet CRAN, can installed via following command:","code":"# install.packages(\"devtools\") devtools::install_github(\"arthur-shaw/susoreview\")"},{"path":[]},{"path":"https://arthur-shaw.github.io/susoreview/index.html","id":"scope","dir":"","previous_headings":"Usage","what":"Scope","title":"Tools for reviewing Survey Solutions interviews","text":"Create attributes Create issues Execute reject/review workflow","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://arthur-shaw.github.io/susoreview/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 susoreview authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issues_for_suso_errors.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an issue for each SuSo validation error — add_issues_for_suso_errors","title":"Add an issue for each SuSo validation error — add_issues_for_suso_errors","text":"First, transform SuSo validations interview__errors issues type indicated issue_type. add issues main issues files.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issues_for_suso_errors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an issue for each SuSo validation error — add_issues_for_suso_errors","text":"","code":"add_issues_for_suso_errors(   df_cases_to_review,   df_errors,   issue_type = 3,   df_issues )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issues_for_suso_errors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an issue for each SuSo validation error — add_issues_for_suso_errors","text":"df_cases_to_review Data frame containing cases review. df_errors Data frame containing SuSo validation errors. issue_type Numeric. Value issue type SuSo error considered. df_issues Data frame containing auto-reject issues.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issues_for_suso_errors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an issue for each SuSo validation error — add_issues_for_suso_errors","text":"Data frame. Issues file additional rows SuSo validation errors.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issue_if_unanswered.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an issue for interviews that have too many questions left unanswered — add_issue_if_unanswered","title":"Add an issue for interviews that have too many questions left unanswered — add_issue_if_unanswered","text":"threshold unanswered interviews can specified one two ways. first way set global threshold n_unanswered_ok parameter.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issue_if_unanswered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an issue for interviews that have too many questions left unanswered — add_issue_if_unanswered","text":"","code":"add_issue_if_unanswered(   df_cases_to_review,   df_interview_stats,   df_issues,   n_unanswered_ok = 0,   df_legit_miss = NULL,   issue_type = 1,   issue_desc = \"Questions left unanswered\",       issue_comment = glue::glue(\"ERROR: The interview is marked as complete, but there are {NotAnswered} questions left without a response. Please answer these questions.\") )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issue_if_unanswered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an issue for interviews that have too many questions left unanswered — add_issue_if_unanswered","text":"df_cases_to_review Data frame. Cases review. df_interview_stats Data frame. Interview statistics fetched server. df_issues Data frame. Contains issues interviews. n_unanswered_ok Numeric. Maximum number unanswered questions allowed recording issue. df_legit_miss Data frame. Interview-specific threshold unanswered questions. issue_type Numeric. Issue type issue file: c(1, 2, 3, 4) issue_desc Character. Short description issue. issue_comment Expression. Expression--example glue paste0--yields issue message meant interviewers understand problem.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issue_if_unanswered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an issue for interviews that have too many questions left unanswered — add_issue_if_unanswered","text":"Data frame. Issues data frame new record interviews many questions left unanswered.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_issue_if_unanswered.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add an issue for interviews that have too many questions left unanswered — add_issue_if_unanswered","text":"second way data frame specifies interview-specific threshold. may useful questions legitimately left unanswered, often due design questionnaire.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_rejection_msgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add consolidated rejection message to data frame of interviews to reject — add_rejection_msgs","title":"Add consolidated rejection message to data frame of interviews to reject — add_rejection_msgs","text":"Add consolidated rejection message data frame interviews reject","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_rejection_msgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add consolidated rejection message to data frame of interviews to reject — add_rejection_msgs","text":"","code":"add_rejection_msgs(df_to_reject, df_issues, issue_types_to_reject = 1)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_rejection_msgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add consolidated rejection message to data frame of interviews to reject — add_rejection_msgs","text":"df_to_reject Data frame. Interviews reject. Contains columns interview__id, interview__key, interviewComplete, interview__status df_issues Data frame. Issues noted interview. issue_types_to_reject Numeric. Issue type values reject.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/add_rejection_msgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add consolidated rejection message to data frame of interviews to reject — add_rejection_msgs","text":"Data frame 1 observation per interview consists interview ID, rejection message, interview status","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/any_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether where a condition is TRUE for any observation. — any_obs","title":"Determine whether where a condition is TRUE for any observation. — any_obs","text":"Determine whether user-provided condition TRUE non-household level microdata--parcel, plot, food item data frame.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/any_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether where a condition is TRUE for any observation. — any_obs","text":"","code":"any_obs(df, where, attrib_name, attrib_vars)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/any_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether where a condition is TRUE for any observation. — any_obs","text":"df Data frame. Household-level microdata contains attribute extract. Logical expression whose variables exist df. attrib_name Character. Name give attribute issues data file attrib_vars Character. Regular expression identifies variable var.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/any_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether where a condition is TRUE for any observation. — any_obs","text":"Data frame attributes following columns: interview__id interview__key attrib_name attrib_val attrib_vars","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/any_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Create attribute about whether any variable contains a specific value — any_vars","title":"Create attribute about whether any variable contains a specific value — any_vars","text":"Inspect columns whose names match var_pattern determine whether contain value var_val.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/any_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create attribute about whether any variable contains a specific value — any_vars","text":"","code":"any_vars(df, var_pattern, var_val = 1, attrib_name, attrib_vars = var_pattern)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/any_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create attribute about whether any variable contains a specific value — any_vars","text":"df Data frame. Household-level microdata contains attribute extract. var_pattern Character Regular expression used select variables counted. var_val Numeric. Value(s) count columns identified var_pattern. attrib_name Character. Name give attribute issues data file attrib_vars Character. Regular expression identifies variable var.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/any_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create attribute about whether any variable contains a specific value — any_vars","text":"Data frame attributes following columns: interview__id interview__key attrib_name attrib_val attrib_vars","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/approve_interview.html","id":null,"dir":"Reference","previous_headings":"","what":"Approve interviews using the appropriate set of API calls — approve_interview","title":"Approve interviews using the appropriate set of API calls — approve_interview","text":"Approve interviews using appropriate set API calls","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/approve_interview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approve interviews using the appropriate set of API calls — approve_interview","text":"","code":"approve_interview(   interview__id,   interview__status,   approve_comment,   statuses_to_approve = c(120),   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/approve_interview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approve interviews using the appropriate set of API calls — approve_interview","text":"interview__id Character. GUID interview found interview__id. interview__status Numeric. Supports values set c(100, 120). approve_comment Character. Comment post upon rejection statuses_to_approve Numeric vector. Supports values set c(100, 120). server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Name workspace whose questionnaires associated interviews get. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/check_for_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether interviews contain comments relevant to the rejection decision. — check_for_comments","title":"Determine whether interviews contain comments relevant to the rejection decision. — check_for_comments","text":"Determine whether interviews contain comments relevant rejection decision.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/check_for_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether interviews contain comments relevant to the rejection decision. — check_for_comments","text":"","code":"check_for_comments(df_comments, df_issues, df_cases_to_review)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/check_for_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether interviews contain comments relevant to the rejection decision. — check_for_comments","text":"df_comments Data frame. Corresponds interview__comments export file. df_issues Data frame. File issues. df_cases_to_review Data frame. File cases subject review.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/check_for_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether interviews contain comments relevant to the rejection decision. — check_for_comments","text":"Data frame. One observation per interview comment.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the non-missing elements of a list variable — count_list","title":"Count the non-missing elements of a list variable — count_list","text":"Count non-missing elements list variable","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the non-missing elements of a list variable — count_list","text":"","code":"count_list(   df,   var_pattern,   missing_vals = c(\"##N/A##\", \"\", NA_character_),   attrib_name,   attrib_vars = var_pattern )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the non-missing elements of a list variable — count_list","text":"df Data frame. Household-level microdata contains attribute extract. var_pattern Character. Regular expression used select variables counted. missing_vals Character. Values describes empty element list variable. attrib_name Character. Name give attribute issues data file attrib_vars Character. Regular expression identifies variable var.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the non-missing elements of a list variable — count_list","text":"Data frame attributes following columns: interview__id interview__key attrib_name attrib_val attrib_vars","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of observations where a condition is TRUE. — count_obs","title":"Count the number of observations where a condition is TRUE. — count_obs","text":"Count number observations non-household level microdata--parcel, plot, food item data frame--user-provided condition TRUE.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of observations where a condition is TRUE. — count_obs","text":"","code":"count_obs(df, where, attrib_name, attrib_vars)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of observations where a condition is TRUE. — count_obs","text":"df Data frame. Household-level microdata contains attribute extract. Logical expression whose variables exist df. attrib_name Character. Name give attribute issues data file attrib_vars Character. Regular expression identifies variable var.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the number of observations where a condition is TRUE. — count_obs","text":"Data frame attributes following columns: interview__id interview__key attrib_name attrib_val attrib_vars","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Count columns with value in microdata — count_vars","title":"Count columns with value in microdata — count_vars","text":"Count number columns matching var_pattern value var_val.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count columns with value in microdata — count_vars","text":"","code":"count_vars(   df,   var_pattern,   var_val = 1,   attrib_name,   attrib_vars = var_pattern )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count columns with value in microdata — count_vars","text":"df Data frame. Household-level microdata contains variables count. var_pattern Character Regular expression used select variables counted. var_val Numeric. Value(s) count columns identified var_pattern. attrib_name Character. Name attribute. attrib_vars Character. Regular expression identifies variable(s) var_pattern.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/count_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count columns with value in microdata — count_vars","text":"Data frame attributes following columns: interview__id interview__key attrib_name attrib_val attrib_vars","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/create_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Create attribute from one or more variable in microdata — create_attribute","title":"Create attribute from one or more variable in microdata — create_attribute","text":"Create attribute one variable microdata","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/create_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create attribute from one or more variable in microdata — create_attribute","text":"","code":"create_attribute(df, condition, attrib_name, attrib_vars)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/create_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create attribute from one or more variable in microdata — create_attribute","text":"df Data frame. Household-level microdata contains attribute extract. condition Logical expression attrib_name Character. Name give attribute issues data file attrib_vars Character. Regular expression identifies variable var.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/create_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create attribute from one or more variable in microdata — create_attribute","text":"Data frame attributes following columns: interview__id interview__key attrib_name attrib_val attrib_vars","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/create_issue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an issue from one or more attributes in attribute data — create_issue","title":"Create an issue from one or more attributes in attribute data — create_issue","text":"Create issue one attributes attribute data","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/create_issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an issue from one or more attributes in attribute data — create_issue","text":"","code":"create_issue(df_attribs, vars, where, type = 1, desc, comment)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/create_issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an issue from one or more attributes in attribute data — create_issue","text":"df_attribs Data frame attributes vars Character. Variable(s) needed logical expression condition. Logical expression TRUE indicates issue. type Type issue. Values follows: c(Reject = 1, Comment = 2, Review = 4) desc Character. Short description survey managers understand issue. comment Character. Longer message interviewers understand issue .","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/create_issue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an issue from one or more attributes in attribute data — create_issue","text":"Data frame issues following columns: interview__id interview__key issue_type issue_desc issue_comment issue_vars issue_loc","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/decide_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Decide how to handle interviews: reject, review, or approve — decide_action","title":"Decide how to handle interviews: reject, review, or approve — decide_action","text":"Decide handle interviews: reject, review, approve","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/decide_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decide how to handle interviews: reject, review, or approve — decide_action","text":"","code":"decide_action(   df_cases_to_review,   df_issues,   issue_types_to_reject,   df_has_comments,   df_interview_stats )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/decide_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decide how to handle interviews: reject, review, or approve — decide_action","text":"df_cases_to_review Data frame. Cases review. df_issues Data frame. Issues. issue_types_to_reject Numeric vector. Value issues reject (e.g., ) df_has_comments Data frame. Interviews comments overall critical questions df_interview_stats Data frame. Interview statistics, number unanswered, invalid, commented questions","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/decide_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decide how to handle interviews: reject, review, or approve — decide_action","text":"List data frames: list(to_reject, to_review, to_approve)","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/extract_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract attributes from variables in microdata — extract_attribute","title":"Extract attributes from variables in microdata — extract_attribute","text":"Extract attributes variables microdata","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/extract_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract attributes from variables in microdata — extract_attribute","text":"","code":"extract_attribute(df, var, attrib_name, attrib_vars)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/extract_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract attributes from variables in microdata — extract_attribute","text":"df Data frame. Household-level microdata contains attribute extract. var Bare name. Variable whose value extract. attrib_name Character. Name give attribute issues data file attrib_vars Character. Regular expression identifies variable var.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/extract_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract attributes from variables in microdata — extract_attribute","text":"Data frame attributes following columns: interview__id interview__key attrib_name attrib_val attrib_vars","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/flag_persistent_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag persistant issues — flag_persistent_issues","title":"Flag persistant issues — flag_persistent_issues","text":"Use rejection comments flag persistent issues--, rejection reasons repeated interview. Creates data frame interviews persistent issues. require manual follow-headquarters staff. Removes interviews persistent isues -reject data frame.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/flag_persistent_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag persistant issues — flag_persistent_issues","text":"","code":"flag_persistent_issues(df_comments, df_to_reject)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/flag_persistent_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag persistant issues — flag_persistent_issues","text":"df_comments Data frame. Comments interviews. Importantly, includes comments posted upon rejection. df_to_reject Data frame. Interviews rejected.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/flag_persistent_issues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag persistant issues — flag_persistent_issues","text":"List data frames: list(to_reject, to_follow_up). to_reject data frame removes cases follow-required persistent problems. to_follow_up data frame identifies cases follow-required persistent problems.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/make_issue.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an issue from values in household-level microdata — make_issue","title":"Make an issue from values in household-level microdata — make_issue","text":"Make issue values household-level microdata","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/make_issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an issue from values in household-level microdata — make_issue","text":"","code":"make_issue(df, where, type = 1, desc, comment, issue_vars)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/make_issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an issue from values in household-level microdata — make_issue","text":"df Data frame microdata Logical expression TRUE indicates issue. type Type issue. Values follows: c(Reject = 1, Comment = 2, Review = 4) desc Character. Short description survey managers understand issue. comment Character. Longer message interviewers understand issue . issue_vars Character. Regular expression describe variables involved issue.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/make_issue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an issue from values in household-level microdata — make_issue","text":"Data frame issues following columns: interview__id interview__key issue_type issue_desc issue_comment issue_vars issue_loc","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/make_issue_in_roster.html","id":null,"dir":"Reference","previous_headings":"","what":"Make issue from values in roster-level microdata — make_issue_in_roster","title":"Make issue from values in roster-level microdata — make_issue_in_roster","text":"Make issue values roster-level microdata","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/make_issue_in_roster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make issue from values in roster-level microdata — make_issue_in_roster","text":"","code":"make_issue_in_roster(   df,   where,   roster_vars,   type = 2,   desc,   comment,   issue_vars )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/make_issue_in_roster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make issue from values in roster-level microdata — make_issue_in_roster","text":"df Data frame microdata Logical expression TRUE indicates issue. roster_vars Character vector. Names roster ID variables needed locate observation roster. type Type issue. Values follows: c(Reject = 1, Comment = 2, Review = 4) desc Character. Short description survey managers understand issue. comment Character. Longer message interviewers understand issue . issue_vars Character. Regular expression describe variables involved issue.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/make_issue_in_roster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make issue from values in roster-level microdata — make_issue_in_roster","text":"Data frame issues following columns: interview__id interview__key issue_type issue_desc issue_comment issue_vars issue_loc","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/post_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Post comments to questions, if any — post_comments","title":"Post comments to questions, if any — post_comments","text":"First, extracts comments issues file interviews reject. , posts comments, ","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/post_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post comments to questions, if any — post_comments","text":"","code":"post_comments(   df_to_reject,   df_issues,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/post_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post comments to questions, if any — post_comments","text":"df_to_reject Data frame containing interviews reject. df_issues Data frame issues. server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Name workspace whose questionnaires associated interviews get. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/post_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post comments to questions, if any — post_comments","text":"Server-side effect posting applicable comments applicable questionnaires","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/reject_interview.html","id":null,"dir":"Reference","previous_headings":"","what":"Reject interview using the appropriate set of rejection API calls — reject_interview","title":"Reject interview using the appropriate set of rejection API calls — reject_interview","text":"Reject interview using appropriate set rejection API calls","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/reject_interview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reject interview using the appropriate set of rejection API calls — reject_interview","text":"","code":"reject_interview(   interview__id,   interview__status,   reject_comment,   statuses_to_reject = c(100, 120),   reject_hq_approved = TRUE,   server = Sys.getenv(\"SUSO_SERVER\"),   workspace = Sys.getenv(\"SUSO_WORKSPACE\"),   user = Sys.getenv(\"SUSO_USER\"),   password = Sys.getenv(\"SUSO_PASSWORD\") )"},{"path":"https://arthur-shaw.github.io/susoreview/reference/reject_interview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reject interview using the appropriate set of rejection API calls — reject_interview","text":"interview__id Character. GUID interview found interview__id. interview__status Numeric. Supports values set c(100, 120, 130). reject_comment Character. Comment post upon rejection statuses_to_reject Numeric vector. Supports values set c(100, 120, 130). reject_hq_approved Boolean. Flag determines whether HeadquartersApproved assignments rejected . Default behavior reject. server Full server web address (e.g., https://demo.mysurvey.solutions, https://.domain) workspace Character. Name workspace whose questionnaires associated interviews get. user API user name password API password","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/sum_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum the values of a variable across records constituting a household observation — sum_vals","title":"Sum the values of a variable across records constituting a household observation — sum_vals","text":"Sum values variable across records constituting household observation","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/sum_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum the values of a variable across records constituting a household observation — sum_vals","text":"","code":"sum_vals(df, var, attrib_name, attrib_vars)"},{"path":"https://arthur-shaw.github.io/susoreview/reference/sum_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum the values of a variable across records constituting a household observation — sum_vals","text":"df Data frame. Household-level microdata contains attribute extract. var Bare name. Variable sum. attrib_name Character. Name give attribute issues data file attrib_vars Character. Regular expression identifies variable var.","code":""},{"path":"https://arthur-shaw.github.io/susoreview/reference/sum_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum the values of a variable across records constituting a household observation — sum_vals","text":"Data frame attributes following columns: interview__id interview__key attrib_name attrib_val attrib_vars","code":""}]
